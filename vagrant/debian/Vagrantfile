# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  ###  FRONTEND  ###################################################
  config.vm.define "frontend" do |frontend|
    frontend.vm.box = "debian/jessie64"

    frontend.vm.network "forwarded_port", guest: 80, host: 5000

#    frontend.vm.synced_folder "../../", "/synced", type: "rsync"

    frontend.vm.network "private_network", ip: "192.168.242.52"

    # Install package
    frontend.vm.provision "shell",
      inline: "sudo apt-get -y install mc cpanminus make apache2 libapache2-mod-perl2 git sqlite3 libdbd-sqlite3-perl libimage-info-perl libhtml-html5-entities-perl libsys-syslog-perl libnet-subnet-perl libimage-exiftool-perl"


    # Install unpackaged perl modules
    frontend.vm.provision "shell", inline: <<-EOF
      (echo y;echo o conf prerequisites_policy follow;echo o conf commit)|sudo cpan
      sudo cpanm 'Geo::JSON'
      sudo cpanm 'Geo::Inverse'
    EOF


    # Create virtual host directory
    frontend.vm.provision "shell", inline: <<-EOF
      cd /
      sudo mkdir /var/www/api
      sudo chmod 770 /var/www/api
      sudo usermod -a -G www-data vagrant
      cd /var/www/
      git clone https://github.com/osmcz/api
      cd /var/www/api
      echo guidepost >> .gitignore
      echo commons >> .gitignore
      rm img
      mkdir img
      sudo chown -R www-data:www-data /var/www/api
    EOF

    # update apache config
    frontend.vm.provision "shell", inline: <<-EOF
      cd /var/www/api
      sudo cp vagrant/debian/api.conf /etc/apache2/sites-enabled
      sudo ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load
      sudo service apache2 restart
    EOF

    # start apache
    frontend.vm.provision "shell", run: "always",
      inline: "service apache2 start"

    frontend.vm.provision "shell", run: "always", inline: <<-EOF
      echo "####################################################[X]#"
      echo "#   Your development instance of OSMCZ API             #"
      echo "#   is now running at: http://vagrant.openstreetmap.cz #"
      echo "########################################################"
      echo http://vagrant.openstreetmap.cz/table/ping should pong
    EOF
  end

end
